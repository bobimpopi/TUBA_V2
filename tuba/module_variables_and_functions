#! /usr/bin/env python
# -*- coding: utf-8 -*-

import numpy as np
import euclid as eu
import logging

current_temperature = 20
current_pressure = ""
current_model = "TUBE"
current_section = []
current_material = "SS316"

tubapoint_counter = 0
dict_TubaPoints = []
current_TubaPoint = []

tubavector_counter = 0
dict_TubaVectors = []


tuba_Vd1x0 = eu.Vector3(0,1,0)             # default dihedral vector 1
tuba_Vd2x0 = eu.Vector3(1,0,0)             # default dihedral vector 2

V_Gravitation=eu.Vector3(0,0,-9.8)              

MeshNbElement=8

Colors={
    "Bloc": "1,1,0",
    "POUTRE_RECTANGLE": "0.8,0.8,0.8",       # grey
    "RECT": "0.8,0.8,0.8",                   # grey
    "POUTRE": "0.8,0.8,0.8",                 # grey
    "TUBE": "0.8,0.8,0.8",                   # grey
    "BARRE": "0.8,0.8,0.8",                  # grey
    "CABLE": "0.8,0.8,0.8",                  # grey
    "TUYAU3M": "0.8,0.8,0.8",                # grey
    "SPRING": "1.0,1.0,0.0",
    "Bute": "0,1,1" ,
    "3D": "0.5,0.8,0.8",
    "Bride": "1,0.6,0",
    "Rigide": "0.3,0.3,0.3",
    "Masse": "0,0,1",
    "Vanne": "1,0,0",
    "Piq": "0.9,0.9,0.9",
    "Support":{     "PF": ["0.666,0,0", "0.666,0,0"],
                    "CB": ["1,1,0", "0.666,0,0"],
                    "GL": ["1,1,0", "1,1,0"]
                    }
    }
    
#============================================================================== 
def VectDih(L,Vd1x,Vd2x,thetad3x,thetad2x):
    '''This function calculates the dihedral vector. For more information check 
    https://sites.google.com/site/pasceque/francais/b---logiciels-developpes/tuba/6-theorie/angles-dihedriques'''
    
    Vd1x =Vd1x.normalized()
    Vd2x =Vd2x.normalized()  
    Vd3x = Vd2x.cross(Vd1x)
    print(Vd1x.magnitude)
           
    Vrot1 = Vd2x.rotate_around(Vd3x,thetad3x)
    Vrot2 = Vrot1.rotate_around(Vd2x,thetad2x)    

    Vr = Vrot2*L    
    return Vr
#==============================================================================
def isColinear(vector1,vector2):
    '''checks if both vector are colinear (cross-prduct=0) '''
    if vector1.cross(vector2).__abs__()==0:
        logging.debug(str(vector1)+" and "+str(vector2)+"are colinear")                
        return True                       
    else: 
        logging.debug(str(vector1)+" and "+ str(vector2)+"are not colinear")                
        return False 
#==============================================================================    
def writeError(text):

    print()
    print()       
    print("ERROR:")   
    for xL in text:
        print("  "+ xL) 
    exit(1)     
#==============================================================================