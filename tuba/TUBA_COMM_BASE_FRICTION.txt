##PYTHON


#PAR_LOT='NON' means, the code is executed line py line. This is a prerequistance to use Python Code. INFO=2 --> additional information in the output are printed
#--------------------------------------------------------------------------------------

DEBUT(PAR_LOT='NON',INFO=2);    

#--------------------------------------------------------------------------------------
#Read MED MESH File
#
#First command LIRE_MAILLAGE is used to read the MED mesh file generated by Salome.
#
#To Do:
#Enter the name of your Salome Mesh in b_format_med->NOM_MED
#--------------------------------------------------------------------------------------


MAIL0=LIRE_MAILLAGE(
        FORMAT='MED',
        UNITE=20
);
#--------------------------------------------------------------------------------------
#Groupes of Nodes (GROUP_NO) and Shells/Volumes (GROUP_MA) are defined which are later used to apply material, elements, forces and boudary conditions
#--------------------------------------------------------------------------------------

MAIL0=DEFI_GROUP(
        reuse =MAIL0,
        MAILLAGE=MAIL0,

        CREA_GROUP_NO=(
#            _F(TOUT_GROUP_MA='OUI',),   #Creates a node group for each element

        ##CREA_GROUPE_NOEUD
        ),

        CREA_GROUP_MA=(
            _F(NOM='ALL',TOUT='OUI',),  #Creates a group for all element

        ##CREATE_MESH_GROUP
        ),

);

#--------------------------------------------------------------------------------------
#Creates additional MESH parts - usually to be used for Discret elements like Springs and additional discret Masses
#--------------------------------------------------------------------------------------

MAIL1=CREA_MAILLAGE(
        MAILLAGE=MAIL0,
        CREA_POI1=  ( 
        ##CREA_POI1
        ),
);
        
MAIL2=CREA_MAILLAGE(
        MAILLAGE=MAIL1,
        LINE_QUAD=  ( 
        ##LINE_QUAD
        ),
);

MAIL=CREA_MAILLAGE(
        MAILLAGE=MAIL2,
        QUAD_LINE=  ( 
        ##QUAD_LINE
        ),
);

#--------------------------------------------------------------------------------------
#Assigns a physical model to geometric entities.
#
#Here we assume that all the geometric entities (TOUT=OUI) are used for mechanical simulation (PHENOMENE=MECANIQUE) with 3D solid elements. 
#
#To Do (Optional):
#you can assign other physics or element types (like shells for example) to some of the elements by replacing TOUT=OUI in AFFE with  GROUP_MA = TheElementGroupYouWantToModel
#--------------------------------------------------------------------------------------

MODMECA=AFFE_MODELE(        
        MAILLAGE=MAIL,
        INFO=2,

        AFFE=(
        ##MODELISATION
        ),
);

#--------------------------------------------------------------------------------------
#Material properties
#
#To Do:
#Enter your material properties in this section. It is possible to add a function defining the material proberties
#if necessary Copy/Paste the DEFI_MATERIAU command to add a second material
#--------------------------------------------------------------------------------------


##DEF_MATERIAU

##DEF_CABLE_MATERIAU

#--------------------------------------------------------------------------------------
#Boundary conditions
#
#This section defines the boundary conditions of the FEA, use DDL_IMPO or LIASION_OBLIQUE on selected groups to impose displacements 
#--------------------------------------------------------------------------------------

BLOCAGE=AFFE_CHAR_MECA(       
        MODELE=MODMECA,

        DDL_IMPO=(   
        ##DDL_IMPO
        ),
               
        DDL_POUTRE=(  
        ##DDL_POUTRE                        
        ),

        LIAISON_ELEM=(
        ##LIAISON_3D_POUTRE
        ##LIAISON_3D_TUBE
        ##LIAISON_3D_TUYAU
        ),
                  
        LIAISON_GROUP=(
        ##LIAISON_GROUP       
        ),
                  
        LIAISON_UNIF=(
        ##LIAISON_UNIF                   
        ),   
        
        LIAISON_SOLIDE=(
        ##LIAISON_SOLIDE
        ),
                  
        LIAISON_OBLIQUE=(
        ##LIAISON_OBLIQUE
        ),
        
        LIAISON_MAIL=(
        ##LIAISON_MAIL
        ),
                    
                                      
);


#-------------------------------------------------------------------------------
# This section specifies external mechanical loads (imposed forces at nodes and line elements)
#-------------------------------------------------------------------------------
LOAD=AFFE_CHAR_MECA(      
        MODELE=MODMECA,

        FORCE_NODALE=(
        ##FORCE_NODALE
        ),

        PESANTEUR=(
            _F( GRAVITE=9800,
                DIRECTION=(0.0,0.0,-1.0),
            ),
        ),

        FORCE_POUTRE=(
        ##LINEAR_FORCE                         
        ),
        
        FORCE_TUYAU=(
        ##FORCE_TUYAU                        
        ),

        PRES_REP=(
        ##PRES_REP
        ),


);


#-------------------------------------------------------------------------------
# Applies the defined Temperature fields to the different mesh groups
#-------------------------------------------------------------------------------

##TEMPERATURE_FUNCTION

##TEMPERATURE_FIELD_FUNCTION

##TEMPERATURE_FIELD_REAL


#-------------------------------------------------------------------------------
# Applies the defined materials to the different meshgroups
#-------------------------------------------------------------------------------

CH_MAT=AFFE_MATERIAU(
    MAILLAGE=MAIL,

    AFFE=(
    ##ASSIGN_MATERIAL
    ),

    # Applies temperature field CHA_TEMP, VALE_REF is the reference temperature where thermal dilatation is 0
    AFFE_VARC=(
        ##APPLY_TEMP_MATERIAL
    ),

);






#------------------------------------------------------------------------------
# SIMULATION STEP
#------------------------------------------------------------------------------
#Friction is introduced as a springffforce. The stiffness is iterativily calculated
#by calculation the reaction forces and then adapting 
#F_friction=x_deform*k_friction=mu*F_reactions



##VARIABLES


              
#--------------------------------------------------------------------------------------
#Maps element types (mass, beam, shell etc.) onto 0D, 1D, 2D and 3D mesh.
#--------------------------------------------------------------------------------------
                          
    CAP[i]=AFFE_CARA_ELEM(    
            MODELE=MODMECA,
    
            BARRE=(
                ##SECTION_BARRE                            
            ),
    
            CABLE=(
                ##SECTION_CABLE                            
            ),
    
            POUTRE=(
                ##SECTION_POUTRE
                ##SECTION_TUBE
                ##SECTION_TUYAU3M
                ##SECTION_TUYAU6M
                ##SECTION_ELBOW  
            ),
                                                                                                   
                      
            DISCRET=(
                ##STIFFNESS_DISCRET

                ##MASS_DISCRET
            ),
                      
            ORIENTATION=(
                ##SECTION_ORIENTATION
            ),
    );


    ##FRICTION_LOOP
##LOOP_OUTPUT

##CALCULATE_FIELDS

##RESULTS_TO_SALOME
##TABLE_OUTPUT




FIN()
#


