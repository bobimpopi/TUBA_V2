
DEBUT(PAR_LOT='NON')
#--------------------------------------------------------------------------------------
#Read MED MESH File
#
#First command LIRE_MAILLAGE is used to read the MED mesh file generated by Salome.
#
#To Do:
#Enter the name of your Salome Mesh in b_format_med->NOM_MED
#--------------------------------------------------------------------------------------

MAIL0=LIRE_MAILLAGE(
        FORMAT='MED',
        UNITE=20
);

MAIL1=CREA_MAILLAGE(
        MAILLAGE=MAIL0,
        CREA_POI1=  ( 
            _F(
                 GROUP_NO=('b'),
                 NOM_GROUP_MA='b_dummy',
             ),
            _F(
                 GROUP_NO=('P8'),
                 NOM_GROUP_MA='P8_dummy',
             ),
            _F(
                 GROUP_NO=('a'),
                 NOM_GROUP_MA='a_dummy',
             ),
            _F(
                 GROUP_NO=('P9'),
                 NOM_GROUP_MA='P9_dummy',
             ),
        ),
);

#--------------------------------------------------------------------------------------
#Groupes of Nodes (GROUP_NO) and Shells/Volumes (GROUP_MA) are defined which are later used to apply material, elements, forces and boudary conditions
#--------------------------------------------------------------------------------------

MAIL1=DEFI_GROUP(
        reuse =MAIL1,
        MAILLAGE=MAIL1,

        CREA_GROUP_NO=(

            _F(  NOM='GPOINTS',
                 UNION=(
                    'P0', 'P1', 'P2', 'P3', 'P4', 'P5', 'a', 'b', 'P8', 
                    'P9', 'P9K', 
                ),
            ),
        ),

        CREA_GROUP_MA=(
            _F(NOM='ALL',TOUT='OUI',),  #Creates a group for all element

            _F( NOM='G_TUYAU',
                TYPE_MAILLE = '1D',
                UNION=(
                  'V0', 'V2', 'V4', 
                ),
            ),
            _F(
                NOM='G_3D',
                TYPE_MAILLE = '3D',
                UNION=(
                    'V1', 'V1_StartFace', 'V1_EndFace', 'V1_InnerFace', 'V1_OuterFace', 'V3_Bent', 'V3_Bent_StartFace', 
                    'V3_Bent_EndFace', 'V3_Bent_InnerFace', 'V3_Bent_OuterFace', 'V5_TShape', 'V5_TShape_StartFace', 
                    'V5_TShape_EndFace', 'V5_TShape_InnerFace', 'V5_TShape_OuterFace', 'V6', 'V6_StartFace', 
                    'V6_EndFace', 'V6_InnerFace', 'V6_OuterFace', 'V7', 'V7_StartFace', 'V7_EndFace', 'V7_InnerFace', 'V7_OuterFace', 
                ),
            ),
            _F( NOM='DummyPoints',
                TYPE_MAILLE = 'POI1',
                UNION=(
               'b_dummy','P8_dummy','a_dummy','P9_dummy',
                ),
            ),
        ),

);

#--------------------------------------------------------------------------------------
#Creates additional MESH parts - usually to be used for Discret elements like Springs and additional discret Masses
#--------------------------------------------------------------------------------------

MAIL2=CREA_MAILLAGE(
        MAILLAGE=MAIL1,
        LINE_QUAD=  ( 
            _F(GROUP_MA=('G_3D',)),
        ),
);

MAIL=CREA_MAILLAGE(
        MAILLAGE=MAIL2,
        QUAD_LINE=  ( 
        ),
);

#--------------------------------------------------------------------------------------
#Assigns a physical model to geometric entities.
#
#Here we assume that all the geometric entities (TOUT=OUI) are used for mechanical simulation (PHENOMENE=MECANIQUE) with 3D solid elements. 
#
#To Do (Optional):
#you can assign other physics or element types (like shells for example) to some of the elements by replacing TOUT=OUI in AFFE with  GROUP_MA = TheElementGroupYouWantToModel
#--------------------------------------------------------------------------------------

MODMECA=AFFE_MODELE(
        MAILLAGE=MAIL,
        INFO=2,

        AFFE=(
            _F(
               GROUP_MA=('DummyPoints'),
               PHENOMENE='MECANIQUE',
               MODELISATION='DIS_TR',
            ),
            _F(
               GROUP_MA=(
               'SpringP9', 
               ),
               PHENOMENE='MECANIQUE',
               MODELISATION='DIS_TR',
            ),
            _F(
                GROUP_MA='G_TUYAU',
                PHENOMENE='MECANIQUE',
                MODELISATION='TUYAU_3M',
            ),
            _F(
                GROUP_MA=(
                 'V1', 'V1_StartFace','V1_EndFace',
                 'V1_InnerFace','V1_OuterFace'),
                PHENOMENE='MECANIQUE',
                MODELISATION='3D',
        ),
            _F(
                GROUP_MA=(
                 'V3_Bent', 'V3_Bent_StartFace','V3_Bent_EndFace',
                 'V3_Bent_InnerFace','V3_Bent_OuterFace'),
                PHENOMENE='MECANIQUE',
                MODELISATION='3D',
        ),
            _F(
                GROUP_MA=(
                 'V6', 'V6_StartFace','V6_EndFace',
                 'V6_InnerFace','V6_OuterFace'),
                PHENOMENE='MECANIQUE',
                MODELISATION='3D',
        ),
            _F(
                GROUP_MA=(
                 'V7', 'V7_StartFace','V7_EndFace',
                 'V7_InnerFace','V7_OuterFace'),
                PHENOMENE='MECANIQUE',
                MODELISATION='3D',
        ),
            _F(
                GROUP_MA=(
                 'V5_TShape', 'V5_TShape_StartFace',
                 'V5_TShape_IncidentFace', 'V5_TShape_EndFace',
                 'V5_TShape_InnerFace', 'V5_TShape_OuterFace'),
                PHENOMENE='MECANIQUE',
                MODELISATION='3D',
        ),
        ),
);

#--------------------------------------------------------------------------------------
#Material properties
#
#To Do:
#Enter your material properties in this section. It is possible to add a function defining the material proberties
#if necessary Copy/Paste the DEFI_MATERIAU command to add a second material
#--------------------------------------------------------------------------------------

E_SS304=DEFI_FONCTION(NOM_PARA='TEMP',
              VALE=
              (
               -28.9,  197.7e3,
                37.8,  193.95e3,
                93.33, 189.6e3,
                148.9, 186.16e3,
                204.4, 182.0e3,
                260.0, 178.6e3,
                315.6, 174.4e3,
                398.9, 168577,
                482.2, 162027,
                565.6, 154443,
                648.9, 146169),
              PROL_DROITE='CONSTANT',   
              PROL_GAUCHE='CONSTANT',); 

NU_SS304=DEFI_FONCTION(NOM_PARA='TEMP',
              VALE=
              (20,0.3),
              PROL_DROITE='CONSTANT',   
              PROL_GAUCHE='CONSTANT',); 

A_SS304=DEFI_FONCTION(NOM_PARA='TEMP',
              VALE=
              (-28.9,  14.90e-6,
                37.8,  15.46e-6,
                93.33, 16.02e-6,
                148.9, 16.56e-6,
                204.4, 17.19e-6,
                260.0, 17.46e-6,
                315.6, 17.82e-6,
                343.3, 17.91e-6,
                371.1, 18e-6,
                398.9, 18.09e-6,
                426.7, 18.18e-6,
                454.4, 18.27e-6,
                621.1, 18.9e-6,
                648.9, 19.08e-6),
              PROL_DROITE='CONSTANT',   
              PROL_GAUCHE='CONSTANT',); 

R_SS304=DEFI_CONSTANTE(VALE=8.027e-09)

SS304=DEFI_MATERIAU(    
     ELAS_FO=_F(  E= E_SS304,
               NU=   NU_SS304,
               RHO=  R_SS304,
               ALPHA=   A_SS304,
               TEMP_DEF_ALPHA= 20 ,     
           ),
);

#--------------------------------------------------------------------------------------
#Boundary conditions
#
#This section defines the boundary conditions of the FEA, use DDL_IMPO or LIASION_OBLIQUE on selected groups to impose displacements 
#--------------------------------------------------------------------------------------

BLOCAGE=AFFE_CHAR_MECA(
        MODELE=MODMECA,

        DDL_IMPO=(
        ),

        DDL_POUTRE=(
        ),

        LIAISON_ELEM=(
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V1_StartFace',
            GROUP_NO_2 ='P1',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V1_EndFace',
            GROUP_NO_2 ='P2',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V3_Bent_StartFace',
            GROUP_NO_2 ='P3',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V3_Bent_EndFace',
            GROUP_NO_2 ='P4',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V6_StartFace',
            GROUP_NO_2 ='b',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V6_EndFace',
            GROUP_NO_2 ='P8',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V7_StartFace',
            GROUP_NO_2 ='a',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V7_EndFace',
            GROUP_NO_2 ='P9',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V5_TShape_StartFace',
            GROUP_NO_2 ='P5',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V5_TShape_IncidentFace',
            GROUP_NO_2 ='a',
            ),
        _F(
            OPTION='3D_POU',
            GROUP_MA_1 ='V5_TShape_EndFace',
            GROUP_NO_2 ='b',
            ),
        ),

        LIAISON_GROUP=(
        ),

        LIAISON_UNIF=(
        ),

        LIAISON_SOLIDE=(
        ),

        LIAISON_OBLIQUE=(
            _F(GROUP_NO='P0',
                   DX=0,
                   DY=0,
                   DZ=0,
                   DRX=0,
                   DRY=0,
                   DRZ=0,
                   ANGL_NAUT=(0.0,0.0,0),
            ),
            _F(GROUP_NO='P2',
                   DZ=0,
                   ANGL_NAUT=(0.0,0.0,0),
            ),
            _F(GROUP_NO='P9K',
                   DX=0,
                   DY=0,
                   DZ=0,
                   DRX=0,
                   DRY=0,
                   DRZ=0,
                   ANGL_NAUT=(0.0,0.0,0),
            ),
        ),

        LIAISON_MAIL=(
        ),

);

#--------------------------------------------------------------------------------------
#Maps element types (mass, beam, shell etc.) onto 0D, 1D, 2D and 3D mesh.
#--------------------------------------------------------------------------------------

CARAELEM=AFFE_CARA_ELEM(
        MODELE=MODMECA,

        BARRE=(
        ),

        CABLE=(
        ),

        POUTRE=(
            _F(
                GROUP_MA=(
                   'V0', 'V2', 'V4', 
                ),
                SECTION ='CERCLE',
                CARA=('R','EP',),
                VALE=(35.0,4.0),
            ),
        ),

        DISCRET=(
              _F(
                  GROUP_MA = ( 'DummyPoints', ),
                  CARA='K_TR_D_N',
                  VALE =(0,0,0,0,0,0),
              ),
            _F(
               GROUP_MA = 'SpringP9',
               REPERE = 'GLOBAL',
               CARA = 'K_TR_D_L',
               VALE = (
                        20,
                        20,
                        20,
                        0,
                        0,
                        0,),
            ),

        ),

        ORIENTATION=(
            _F(	GROUP_NO='P0',
            		CARA='GENE_TUYAU',
                VALE=(0,1,0,),
            ),
        ),
);

#-------------------------------------------------------------------------------
# This section specifies external mechanical loads (imposed forces at nodes and line elements)
#-------------------------------------------------------------------------------

LOAD=AFFE_CHAR_MECA(
        MODELE=MODMECA,

        FORCE_NODALE=(
        ),

        PESANTEUR=(
            _F( GRAVITE=9800,
                DIRECTION=(0.0,0.0,-1.0),
            ),
        ),

        FORCE_POUTRE=(
        ),

        FORCE_TUYAU=(
            _F(
                GROUP_MA=(
                    'V0', 'V2', 'V4', 
                ),
                PRES=0.2,
            ),
        ),

        PRES_REP=(
            _F(
                GROUP_MA=(
                    'V1_InnerFace', 'V3_Bent_InnerFace', 'V5_TShape_InnerFace', 'V6_InnerFace', 'V7_InnerFace', 
                ),
                PRES=0.2,
            ),
        ),


);

#-------------------------------------------------------------------------------
# Applies the defined Temperature fields to the different mesh groups
#-------------------------------------------------------------------------------




CHA_T_R=CREA_CHAMP(
     OPERATION='AFFE',
     TYPE_CHAM='NOEU_TEMP_R',
     MODELE=MODMECA,
     AFFE=(
            _F(
               GROUP_MA=(
                'V0', 'V1', 'V2', 'V3_Bent', 'V4', 'V5_TShape', 'V6', 
                'V7', 
               ),
               NOM_CMP='TEMP',
               VALE=550
            ),
    ),
);
     
IMPR_RESU(UNITE=80,FORMAT='MED',RESU=(_F(CHAM_GD=CHA_T_R)))
     


#-------------------------------------------------------------------------------
# Applies the defined materials to the different meshgroups
#-------------------------------------------------------------------------------

CH_MAT=AFFE_MATERIAU(
    MAILLAGE=MAIL,

    AFFE=(
        _F(
            GROUP_MA=(
                'V0', 'V1', 'V2', 'V3_Bent', 'V4', 'V5_TShape', 'V6', 
                'V7', 
            ),
            MATER=SS304,
        ),

    ),

    # Applies temperature field CHA_TEMP, VALE_REF is the reference temperature where thermal dilatation is 0
    AFFE_VARC=(
        _F(
           GROUP_MA=(
            'V0', 'V1', 'V2', 'V3_Bent', 'V4', 'V5_TShape', 'V6', 
            'V7', 
           ),
           NOM_VARC='TEMP',
           CHAM_GD=CHA_T_R,
            VALE_REF=20
        ),
    ),

);

#------------------------------------------------------------------------------
# SIMULATION STEP
#------------------------------------------------------------------------------





# Run simulation (linear)
#------------------------------------------------------------------------------
RESU=MECA_STATIQUE(
     MODELE=MODMECA,
     CHAM_MATER=CH_MAT,
     CARA_ELEM=CARAELEM,
     INST=1,
     EXCIT=(
         _F(   CHARGE=BLOCAGE
          ),
         _F(   CHARGE=LOAD,
          ),

     ),
);


# Calculate Reaction Forces from obtained results
#---------------------------------------------------

RESU=CALC_CHAMP(reuse =RESU,
     RESULTAT=RESU,
     FORCE=('REAC_NODA','FORC_NODA'),);

R_TUYAU=CALC_CHAMP(
     RESULTAT=RESU,
     GROUP_MA='G_TUYAU',
     CRITERES='SIEQ_ELNO',);

#Extract and calculate results on subpoints in the TUYAU-shell
MAX_VMIS=POST_CHAMP(
    RESULTAT=R_TUYAU,
    TOUT_ORDRE='OUI',
    GROUP_MA='G_TUYAU',
    MIN_MAX_SP=(
    _F( NOM_CHAM='SIEQ_ELNO',
           NOM_CMP='VMIS',
           TYPE_MAXI='MAXI',
           NUME_CHAM_RESU=1,
           ),
    ),
);
        

R_3D=CALC_CHAMP(
     RESULTAT=RESU,
     GROUP_MA='G_3D',     
     CONTRAINTE=('SIGM_ELNO','SIGM_ELGA'),
     CRITERES=('SIEQ_ELNO'),
     );
        


# PRINT RESULTS  to  .MED  ->  Salome
#---------------------------------------------------
   
IMPR_RESU(UNITE=80,FORMAT='MED',RESU=(
        _F(RESULTAT=RESU),

        _F(RESULTAT=MAX_VMIS),
 

        _F(RESULTAT=R_3D,GROUP_MA=('G_3D')),
 
));
#IMPR_RESU(UNITE=80, FORMAT='MED', CONCEPT=_F(CARA_ELEM=CARAELEM,REPERE_LOCAL='ELNO',MODELE=MODMECA), )


#Results(Deformation, Reaction Forces and Forces) at specific nodes are saved in a txt-file
#-----------------------------------------------------------------------------------------
Tab_DEPL=CREA_TABLE(RESU=_F(RESULTAT=RESU,
                          GROUP_NO='GPOINTS', #'ALL'
                          NOM_CHAM='DEPL',
                          NOM_CMP=('DX','DY','DZ'),
                          PRECISION=0.1,
                          ),
                );
Tab_REAC=CREA_TABLE(RESU=_F(RESULTAT=RESU,
                          GROUP_NO='GPOINTS', #'ALL'
                          NOM_CHAM='REAC_NODA',
                          NOM_CMP=('DX','DY','DZ'),
                          PRECISION=0.1,
                          ),
                );
Tab_FORC=CREA_TABLE(RESU=_F(RESULTAT=RESU,
                          GROUP_NO='GPOINTS',    #'ALL'
                          NOM_CHAM='FORC_NODA',
                          NOM_CMP=('DX','DY','DZ'),
                          PRECISION=0.1,
                          ),
                );

#IMPR_TABLE(
#        TABLE=Tab_REAC,
#        TITLE="test",
#        FILTRE= (_F(NOM_PARA='NODE',VALE_K=('N1','N2'),),),
#        NOM_PARA=('LIEU','DX'),
#        FORMAT_R='1PE12.3',
#);

var_depl=Tab_DEPL.EXTR_TABLE();

print("Type",type(var_depl))

var_reac=Tab_REAC.EXTR_TABLE();
var_forc=Tab_FORC.EXTR_TABLE();

if var_depl['COOR_Z']:
    var_depl=var_depl['NOM_CHAM','NOEUD','COOR_X','COOR_Y','COOR_Z','DX','DY','DZ']
    var_reac=var_reac['NOM_CHAM','NOEUD','COOR_X','COOR_Y','COOR_Z','DX','DY','DZ']
    var_forc=var_forc['NOM_CHAM','NOEUD','COOR_X','COOR_Y','COOR_Z','DX','DY','DZ']
else:
    var_depl=var_depl['NOM_CHAM','NOEUD','COOR_X','COOR_Y','DX','DY','DZ']
    var_reac=var_reac['NOM_CHAM','NOEUD','COOR_X','COOR_Y','DX','DY','DZ']
    var_forc=var_forc['NOM_CHAM','NOEUD','COOR_X','COOR_Y','DX','DY','DZ']

#mass=POST_ELEM(
#    RESULTAT =RESU ,
#    MASS_INER=_F(TOUT='OUI' ),
#    TITRE= 'mass',
#    ) ;
#var_mass=mass.EXTR_TABLE();
#var_mass=var_mass['LIEU','MASSE']

import os
current_directory ='/home/max/salome_meca/TUBA_2019/tutorials/000_Testing/x_008_TUYAU_3d'

OUTPUT_FILE='/008_TUYAU_3D_K_M_F_Tables.output' # Filename of the output file
fileOutput = current_directory + OUTPUT_FILE # Define output file


f = open(fileOutput, 'w')     #'a' opens the file for appending , 'w' opens file and erases
f.write(str(var_depl)+str(var_reac)+str(var_forc))     #+'\n'+'Total Mass in tons \n'+str(var_mass))
f.close()


        


FIN()
#